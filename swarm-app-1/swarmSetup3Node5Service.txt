## Assignment Answers: Create a Multi-Service Multi-Node Web App

#create 3 node swarm
#open ingress 5001 firewall

docker node ls

docker service ls

docker network create -d overlay backend

docker network create -d overlay frontend

docker service create --name vote -p 80:80 --network frontend -- replicas 2 COPY IMAGE
#docker service create --name vote -p 80:80 --network frontend -- replicas 2 dockersamples/examplevotingapp_vote:before
docker service create --name redis --network frontend --replica 1 redis:3.2
docker service create --name worker --network frontend --network backend COPY IMAGE
#docker service create --name worker --network frontend --network backend dockersamples/examplevotingapp_worker
docker service create --name db --network backend COPY MOUNT INFO
#docker service create --name db --network backend --mount type=volume,source=db-data,target=/var/lib/postgresql/data postgres:9.4
docker service create --name result --network backend -p 5001:80 COPY INFO
#docker service create --name result --network backend -p 5001:80 dockersamples/examplevotingapp_result:before

#put worker last to avoid errors and restarts
docker service create --name vote -p 80:80 --network frontend --replicas 2 dockersamples/examplevotingapp_vote:before
docker service create --name redis --network frontend --replicas 1 redis:3.2
docker service create --name db --network backend --mount type=volume,source=db-data,target=/var/lib/postgresql/data postgres:9.4
docker service create --name result --network backend -p 5001:80 dockersamples/examplevotingapp_result:before
docker service create --name worker --network frontend --network backend dockersamples/examplevotingapp_worker

docker service ls
#5 services, replicas should match
docker service ps result

docker service ps redis

docker service ps db

docker service ps vote

docker service ps worker

cat /etc/docker/
#change daemon.json file. experimental = true
#service logs new 17.05 experimental
docker service logs worker

docker service ps worker

